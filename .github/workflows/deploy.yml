name: Deploy

on:
  push:
    branches:
      - dev
      - master
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    branches:
      - dev
      - master
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        
      - name: Run TypeScript check
        run: npm run type-check
      
      - name: Run unit tests
        run: npm test
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          fail_ci_if_error: false
          
  deploy:
    name: Deploy to Vercel
    needs: test
    if: success() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Set deployment environment
        id: set-environment
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "DEPLOY_ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "DEPLOY_ENV=production" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
          fi
      
      - name: Pull Vercel Environment Variables
        run: vercel pull --yes --environment=${{ env.DEPLOY_ENV }} --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }} ${{ env.DEPLOY_ENV == 'production' && '--prod' || '' }}
      
      - name: Deploy to Vercel
        id: deploy
        run: |
          if [[ "${{ env.DEPLOY_ENV }}" == "production" ]]; then
            DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          else
            DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          fi
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          
      - name: Run deployment verification tests
        run: |
          npm run verify-deployment -- --url=${{ steps.deploy.outputs.deployment_url }}
  
  notify:
    name: Send Notifications
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Send deployment notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: 'Deployment Status'
          SLACK_MESSAGE: '${{ needs.deploy.outputs.deployment_url || '' }}'
          SLACK_FOOTER: 'SkillSwap MVP | ${{ github.event.repository.html_url }}'
